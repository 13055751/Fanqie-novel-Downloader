name: Build Release and Debug

on:
  workflow_dispatch:
    inputs:
      note:
        description: 'Manual trigger for Windows build (Release & Debug)'
        required: false
        default: ''
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - '**/*.py'
      - 'build.spec'
      - 'debug.spec'
      - '.github/workflows/build-release.yml'
  pull_request:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: build-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-windows:
    name: Windows PyInstaller (${{ matrix.variant }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        variant: [release, debug]
        include:
          - variant: release
            spec: build.spec
            exe: TomatoNovelDownloader.exe
            artifact_name: TomatoNovelDownloader-windows
          - variant: debug
            spec: debug.spec
            exe: TomatoNovelDownloader-debug.exe
            artifact_name: TomatoNovelDownloader-debug-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install "pyinstaller>=6.5,<7" "pyinstaller-hooks-contrib>=2024.7"

      - name: Build (${{ matrix.variant }})
        shell: pwsh
        run: |
          python -m PyInstaller --clean --noconfirm ${{ matrix.spec }}

      - name: Show dist contents
        shell: pwsh
        run: |
          Get-ChildItem -Recurse dist | Select-Object FullName, Length

      - name: Upload artifact (${{ matrix.variant }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.exe }}
          if-no-files-found: error
          retention-days: 7

  attach-to-release:
    name: Attach artifacts to Release (tag only)
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}