name: 编译并发布exe

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 20

    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: 安装依赖
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        
        $packages = @(
          "customtkinter>=5.2.0",
          "requests>=2.31.0",
          "beautifulsoup4>=4.12.0",
          "tqdm>=4.65.0",
          "stem>=1.8.0",
          "fake-useragent>=1.4.0",
          "pycryptodome>=3.18.0",
          "ebooklib>=0.18",
          "lxml>=4.9.0",
          "urllib3>=2.0.0",
          "PySocks>=1.7.1"
        )
        
        foreach ($package in $packages) {
          pip install $package
        }

    - name: 验证PyInstaller配置文件
      shell: pwsh
      run: |
        if (Test-Path "build_console.spec") {
          echo "✅ build_console.spec 文件存在"
          Get-Content "build_console.spec" | Select-Object -First 10
        } else {
          echo "❌ build_console.spec 文件不存在"
          exit 1
        }

    - name: 编译exe
      shell: pwsh
      run: |
        pyinstaller build_console.spec --clean --noconfirm

    - name: 生成版本信息
      id: version
      shell: pwsh
      run: |
        $version = "v$(Get-Date -Format 'yyyy.MM.dd.HHmm')"
        echo "tag=$version" >> $env:GITHUB_OUTPUT
        git log --oneline -20 --pretty=format:"- %s" > commits.txt

    - name: 创建发布说明文件
      shell: pwsh
      run: |
        $version = "${{ steps.version.outputs.tag }}"
        $currentTime = Get-Date -Format 'yyyy-MM-dd HH-mm-ss'
        $commitContent = Get-Content commits.txt -Raw
        
        $content = "## Fanqie Novel Downloader $version`n`n"
        $content += "### Release Time`n"
        $content += "$currentTime`n`n"
        $content += "### Updates`n"
        $content += "$commitContent`n`n"
        $content += "### Usage Instructions`n`n"
        $content += "#### Version Description:`n"
        $content += "- **FanqieDownloader_Debug.exe** - Console version for debugging and detailed information`n`n"
        $content += "#### How to Use:`n"
        $content += "1. Download the exe file`n"
        $content += "2. Double-click to run`n"
        $content += "3. Supports Windows 10+ systems`n"
        $content += "4. Console window shows detailed runtime information`n`n"
        $content += "### Notes`n"
        $content += "- First run may be blocked by antivirus software, please add to trust list`n"
        $content += "- Console window displays detailed download progress and error information`n"
        $content += "- Please report issues in the Issues section`n"
        
        $content | Out-File -FilePath "release_notes.md" -Encoding UTF8

    - name: 创建Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: Fanqie Novel Downloader ${{ steps.version.outputs.tag }}
        body_path: release_notes.md
        files: |
          dist/FanqieDownloader_Debug.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
