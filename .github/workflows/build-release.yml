name: 编译并发布exe

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 20  # 获取最近20次提交
    
    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 安装依赖
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        
        # 安装项目依赖
        $packages = @(
          "customtkinter>=5.2.0",
          "requests>=2.31.0",
          "beautifulsoup4>=4.12.0",
          "tqdm>=4.65.0",
          "stem>=1.8.0",
          "fake-useragent>=1.4.0",
          "pycryptodome>=3.18.0",
          "ebooklib>=0.18",
          "lxml>=4.9.0",
          "urllib3>=2.0.0",
          "PySocks>=1.7.1"
        )
        
        foreach ($package in $packages) {
          pip install $package
        }
    
    - name: 创建PyInstaller配置
      shell: pwsh
      run: |
        $specContent = @'
# -*- mode: python ; coding: utf-8 -*-
import os
from PyInstaller.utils.hooks import collect_data_files

# 收集customtkinter数据文件
customtkinter_datas = collect_data_files('customtkinter')

a = Analysis(
    ['main.py'],
    pathex=[],
    binaries=[],
    datas=customtkinter_datas,
    hiddenimports=[
        'customtkinter', 'tkinter', 'requests', 'bs4', 'tqdm', 'stem',
        'fake_useragent', 'Crypto', 'ebooklib', 'urllib3'
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=['matplotlib', 'numpy', 'pandas'],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=None,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=None)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='FanqieDownloader',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)
'@
        
        $specContent | Out-File -FilePath "auto_build.spec" -Encoding UTF8
    
    - name: 编译exe
      shell: pwsh
      run: |
        # 编译调试版本
        pyinstaller build_console.spec --clean --noconfirm
        # 编译发布版本
        pyinstaller build_windowed.spec --clean --noconfirm
    
    - name: 生成版本信息
      id: version
      shell: pwsh
      run: |
        $version = "v$(Get-Date -Format 'yyyy.MM.dd.HHmm')"
        echo "tag=$version" >> $env:GITHUB_OUTPUT
        
        # 获取提交信息
        $commits = git log --oneline -20 --pretty=format:"- %s"
        $body = @"
## 🍅 番茄小说下载器 $version

### 📅 发布时间
$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')

### 📝 更新内容
$commits

### 💾 使用说明

#### 📦 两个版本可选：
- **番茄小说下载器.exe** - 发布版本（无控制台窗口）
- **番茄小说下载器_调试版.exe** - 调试版本（带控制台窗口）

#### 🚀 使用方法：
1. 下载对应版本的exe文件
2. 双击运行即可使用
3. 支持 Windows 10+ 系统

### ⚠️ 注意事项
- 首次运行可能被杀毒软件拦截，请添加信任
- 如遇问题建议先使用调试版本查看错误信息
- 如有问题请在 Issues 中反馈
"@
        
        $body | Out-File -FilePath "release_notes.md" -Encoding UTF8
    
    - name: 创建Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: 番茄小说下载器 ${{ steps.version.outputs.tag }}
        body_path: release_notes.md
        files: |
          dist/番茄小说下载器.exe
          dist/番茄小说下载器_调试版.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
